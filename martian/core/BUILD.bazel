load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "core",
    srcs = [
        "argument_map.go",
        "errors.go",
        "fork.go",
        "iostats.go",
        "jobdef.go",
        "jobinfo.go",
        "jobmanager.go",
        "jobmanager_local.go",
        "jobmanager_remote.go",
        "maxjobs_semaphore.go",
        "metadata.go",
        "node.go",
        "override.go",
        "perf.go",
        "pipestance.go",
        "post_process.go",
        "profile_mode.go",
        "resolve.go",
        "resource_semaphore.go",
        "rlimit.go",
        "runtime.go",
        "shell_quote.go",
        "stage.go",
        "statfs.go",
        "storage.go",
        "uuid.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux": [
            "meminfo_linux.go",
            "statfs_unix.go",
            "perf_unix.go",
            "loadavg_linux.go",
        ],
        "//conditions:default": [
            "perf_generic.go",
            "meminfo_generic.go",
            "loadavg_generic.go",
            "statfs_generic.go",
        ],
    }),
    importpath = "github.com/martian-lang/martian/martian/core",
    visibility = ["//visibility:public"],
    deps = [
        "//martian/syntax",
        "//martian/util",
        "@org_golang_x_sys//unix:go_default_library",
    ],
)

go_test(
    name = "core_test",
    srcs = [
        "argument_map_test.go",
        "fork_test.go",
        "iostats_test.go",
        "jobdef_test.go",
        "metadata_test.go",
        "post_process_test.go",
        "resolve_test.go",
        "resource_semaphore_test.go",
        "runloop_test.go",
        "runtime_test.go",
        "shell_quote_test.go",
        "stage_test.go",
        "storage_test.go",
        "uuid_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux": [
            "perf_unix_subprocess_test.go",
            "perf_unix_test.go",
            "loadavg_linux_test.go",
            "meminfo_linux_test.go",
            "statfs_unix_test.go",
        ],
        "//conditions:default": [],
    }),
    data = [
        "testdata/map_call_edge_cases.mro",
        "testdata/mock_stages.mro",
        "testdata/simple_struct_pipeline.mro",
        "testdata/stage.py",
        "testdata/stages.mro",
        "testdata/struct_pipeline.mro",
        "testdata/sub/stages.mro",
        "testdata/vsize.py",
    ],
    embed = [":core"],
    deps = [
        "//martian/syntax",
        "//martian/util",
        "@com_github_google_shlex//:go_default_library",
    ],
)

# Backwards compat for what gazelle used to call this target.
alias(
    name = "go_default_library",
    actual = "core",
    visibility = ["//visibility:public"],
)
